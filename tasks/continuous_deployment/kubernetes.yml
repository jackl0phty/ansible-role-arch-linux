---
# tasks file for jackl0phty.arch_linux
- hosts: all
  tasks:
  # Include playbook variables.
  - name: Include playbook vars.
    include_vars: '../../vars/main.yml'

  # Install Arch Linux Kubernetes packages.
  - name: Install Kubernetes packages for Arch Linux.
    pacman:
      name: "{{ item }}"
      state: present
    with_items: '{{ kubernetes_packages }}'
    become: yes
    become_user: root
    when: ansible_distribution == "Archlinux"

  # Record if Docker is running.
  - shell: "netstat -nlp |grep docker |/usr/bin/egrep -v grep |/usr/bin/awk '{print $7 }'"
    register: docker
    ignore_errors: True 
    
  # Start Docker service.
  - name: Start Docker service.
    command: systemctl start docker.socket
    when: docker == 'LISTENING'
    become: yes
    become_user: root

  # Has Docker been enabled at boot.
  - name: Has Docker been enabled on boot.
    shell: "systemctl list-unit-files |grep docker.socket |awk '{ print $2 }'"
    register: docker_enabled
    ignore_errors: True

  # Enable Docker on boot.
  - name: Enable Docker on boot.
    shell: systemctl enable --now docker.socket
    when: docker_enabled == 'disabled'
    args:
    become: yes
    become_user: root

  # Has Kubernetes source been cloned.
  - name: Has Kubernetes source been cloned.
    stat:
      path: "{{ kubernetes_clone_dir }}"
    register: kubes_cloned

  # Clone Kubernetes Github repo.
  - name: Clone Kubernetes Github repo.
    git:
      repo: "{{ kubernetes_git_repo }}"
      dest: "{{ kubernetes_clone_dir }}"
      version: "{{ kubernetes_git_branch }}"
      force: yes
      update: yes
    when: kubes_cloned.stat.isdir == False
    become: yes
    become_user: root

  # Set perms to to un-priv user.
  - name: Set perms on kubernetes repo to un-priv user.
    file:
      path: "{{ kubernetes_clone_dir }}"
      owner: "{{ kubernetes_user }}"
      group: "{{ kubernetes_user }}"
      state: directory
      mode: 0755
      recurse: yes
    become: yes
    become_user: root

  # Register if kubernetes tarball has been built.
  - name: Check if kubernetes tarbarll exists.
    stat:
      path: "{{ kubernetes_clone_dir }}/_output/release-tars/kubernetes.tar.gz" 
    register: kubernetes_tarball_exists

  # Build Kubernetes from source.
  - name: Build Kubernetes from source.
    shell:  'make release'
    args:
      chdir: "{{ kubernetes_clone_dir }}"
    when: kubernetes_tarball_exists.stat.exists == false
    become: yes
    become_user: '{{ kubernetes_user }}'

  # Symlink Kubernetes client bin.
  - name: Symlink Kubernetes client bin.
    file:
      src: "{{ kubernetes_clone_dir }}/_output/release-stage/client/linux-amd64/kubernetes/client/bin/{{ item.src }}"
      dest: "/usr/local/bin/{{ item.dest }}"
      owner: "{{ kubernetes_user }}"
      group: "{{ kubernetes_user }}"
      state: link
      mode: 0744
    with_items:
      - { src: 'kubectl', dest: 'kubectl' } 
    become: yes
    become_user: root
  
  # Symlink Kubernetes server bins.
  - name: Symlink Kubernetes server bins.
    file:
      src: "{{ kubernetes_clone_dir }}/_output/release-stage/server/linux-amd64/kubernetes/server/bin/{{ item }}"
      dest: "/usr/local/bin/{{ item }}"
      owner: "{{ kubernetes_user }}"
      group: "{{ kubernetes_user }}"
      state: link
      mode: 0744
    with_items:
      - apiextensions-apiserver
      - cloud-controller-manager
      - hyperkube
      - kube-apiserver
      - kube-proxy
      - kube-scheduler
      - kubelet
      - mounter
    become: yes
    become_user: root

  # Has etcd source been moved.
  - name: Has etcd source been moved.
    stat:
      path: "/opt/etcd-v{{ etcd_version }}" 
    register: etcd_source_moved
 
  # Download etcd source.
  - name: Download etcd source. 
    unarchive:
      src: "https://github.com/coreos/etcd/releases/download/v{{ etcd_version }}/etcd-v{{ etcd_version }}-linux-amd64.tar.gz"
      dest: /tmp
      remote_src: yes
      owner: "{{ kubernetes_user }}"
      group: "{{ kubernetes_user }}"
    when: etcd_source_moved.stat.isdir == False
 
  # Move & rename etcd source dir.
  - name: Move & rename etcd source dir.
    shell: "mv /tmp/etcd-v{{ etcd_version }}-linux-amd64 /opt/etcd-v{{ etcd_version }}"
    ignore_errors: True
    when: etcd_source_moved.stat.isdir == False
    become: yes
    become_user: root
 
  # Symlink etcd bins.
  - name: Symlink etcd bins.
    file:
      src: "/opt/etcd-v{{ etcd_version }}/{{ item }}"
      dest: "/usr/local/bin/{{ item }}"
      owner: "{{ kubernetes_user }}"
      group: "{{ kubernetes_user }}"
      state: link
      mode: 0744
    with_items:
      - etcd
      - etcdctl 
    become: yes
    become_user: root


  # Write out kube config.
#  - name: Write out kube config.
#    template:
#      src: '../templates/monerod.conf'
#      dest: "{{ monerod_config_file }}"
#      owner: "{{ kubernetes_user }}"
#      group: "{{ kubernetes_user }}"
#      mode: 0644
#    when: monerod_config_file.isfile is defined

