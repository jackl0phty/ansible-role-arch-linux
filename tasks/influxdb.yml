---
# tasks file for jackl0phty.arch_linux
- hosts: all
  vars:
  tasks:
  # Include playbook variables.
  - name: Include playbook vars.
    include_vars: '../vars/main.yml'

  # Register if telegraf binary exists or not.
  - name: Check if telegraf binary exists.
    stat: 
      path: '/usr/bin/telegraf'
    register: telegraf_binary_exists

  # Install telegraf via yaourt.
  - name: Install telegraf via yaourt.
    shell:  'yaourt --noconfirm -S telegraf'
    when: telegraf_binary_exists.stat.exists == false 
    become: yes
    become_user: '{{ nvidia_user }}'

  # Register if chronograf binary exists or not.
  - name: Check if chronograf binary exists.
    stat:
      path: '/usr/bin/chronograf'
    register: chronograf_binary_exists

  # Install chronograf via yaourt.
  - name: Install chronograf via yaourt.
    shell:  'yaourt --noconfirm -S chronograf'
    when: chronograf_binary_exists.stat.exists == false 
    become: yes
    become_user: '{{ nvidia_user }}'

  # Register if kapacitor binary exists or not.
  - name: Check if kapacitor binary exists.
    stat:
      path: '/usr/bin/kapacitor'
    register: kapacitor_binary_exists

  # Install kapacitor via yaourt.
  - name: Install kapacitor via yaourt.
    shell:  'yaourt --noconfirm -S kapacitor'
    when: kapacitor_binary_exists.stat.exists == false
    become: yes
    become_user: '{{ nvidia_user }}'
 
  # Register if InfluxDB binary exists or not.
  - name: Check if InfluxDB binary exists.
    stat:
      path: '/usr/bin/influxd'
    register: influxdb_binary_exists

  # Install InfluxDB via yaourt.
  - name: Install InfluxDB via yaourt.
    shell:  'yaourt --noconfirm -S influxdb'
    when: influxdb_binary_exists.stat.exists == false
    become: yes
    become_user: '{{ nvidia_user }}'

  # Has telegraf been enabled at boot.
  - name: Has telegraf been enabled on boot.
    shell: "systemctl list-unit-files |grep telegraf.service |awk '{ print $2 }'"
    register: telegraf_enabled

  # Enable telegraf on boot.
  - name: Enable telegraf on boot.
    shell: systemctl enable --now telegraf.service
    args:
    #when: telegraf_enabled == 'disabled'
    become: yes
    become_user: root

  # Has Chronograf been enabled at boot.
  - name: Has chronograf been enabled on boot.
    shell: "systemctl list-unit-files |grep chronograf.service |awk '{ print $2 }'"
    register: chronograf_enabled

  # Enable Chronograf on boot.
  - name: Enable chronograf on boot.
    shell: systemctl enable --now chronograf.service
    args:
    #when: chronograf_enabled == 'disabled'
    become: yes
    become_user: root

  # Has Kapacitor been enabled at boot.
  - name: Has kapacitor been enabled on boot.
    shell: "systemctl list-unit-files |grep kapacitor.service |awk '{ print $2 }'"
    register: kapacitor_enabled

  # Enable Kapacitor on boot.
  - name: Enable Kapacitor on boot.
    shell: "systemctl enable --now kapacitor.service"
    args:
    #when: kapacitor_enabled == 'disabled'
    become: yes
    become_user: root

  # Has InfluxDB been enabled at boot.
  - name: Has InfluxDB been enabled on boot.
    shell: "systemctl list-unit-files |grep influxdb.service |awk '{ print $2 }'"
    register: influxdb_enabled
  
  # Enable InfluxDB on boot.
  - name: Enable InfluxDB on boot.
    shell: "systemctl enable --now influxdb.service"
    args:
    #when: influxdb_enabled == 'disabled'
    become: yes
    become_user: root

  


